// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`shell_app_file_app/build.gradle 1`] = `
"buildscript {
  repositories {
    maven { url 'https://maven.fabric.io/public' }
  }

  dependencies {
    classpath 'io.fabric.tools:gradle:1.+'
  }
}
apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'com.neenbedankt.android-apt'

repositories {
  maven { url 'https://maven.fabric.io/public' }
}

android {
  compileSdkVersion 25
  buildToolsVersion '25.0.2'

  defaultConfig {
    applicationId 'host.exp.nclexp'
    targetSdkVersion 25
    versionCode 11
    versionName '22.0.0'
    ndk {
      abiFilters 'armeabi-v7a', 'x86'
    }
    multiDexEnabled true
    testInstrumentationRunner \\"android.support.test.runner.AndroidJUnitRunner\\"
    // Deprecated. Used by net.openid:appauth
    manifestPlaceholders = [
      'appAuthRedirectScheme': 'host.exp.exponent'
    ]
  }
  dexOptions {
    javaMaxHeapSize System.getenv(\\"DISABLE_DEX_MAX_HEAP\\") ? null : \\"8g\\"
  }
  productFlavors {
    // Define separate dev and prod product flavors.
    dev {
      // dev utilizes minSDKVersion = 21 to allow the Android gradle plugin
      // to pre-dex each module and produce an APK that can be tested on
      // Android Lollipop without time consuming dex merging processes.
      minSdkVersion 21
    }
    devRemoteKernel {
      minSdkVersion 21
    }
    dev19 {
      // For debugging / development on older SDK versions. Increases build
      // time so use 'dev' if not running on older SDKs.
      minSdkVersion 19
    }
    prod {
      // The actual minSdkVersion for the application.
      minSdkVersion 19
    }
  }
  buildTypes {
    debug {
      debuggable true
    }
    release {
      minifyEnabled true
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
      zipAlignEnabled true
    }
  }
  signingConfigs {
    debug {
      storeFile file('../debug.keystore')
    }
  }
  lintOptions {
    abortOnError false
  }
}

configurations.all {
  resolutionStrategy {
    force 'org.webkit:android-jsc:r216113'
  }
}

dependencies {
  compile fileTree(dir: 'libs', include: ['*.jar'])

  compile 'com.android.support:multidex:1.0.1'

  // Versioned react native
  // THIS COMMENT IS USED BY android-build-aar.sh DO NOT MODIFY
  compile(name: 'ReactAndroid-release-abi22_0_0', ext: 'aar')
  compile(name: 'ReactAndroid-release-abi21_0_0', ext: 'aar')
  compile(name: 'ReactAndroid-release-abi20_0_0', ext: 'aar')
  compile(name: 'ReactAndroid-release-abi19_0_0', ext: 'aar')
  compile(name: 'ReactAndroid-release-abi18_0_0', ext: 'aar')
  compile(name: 'ReactAndroid-release-abi17_0_0', ext: 'aar')
  compile(name: 'ReactAndroid-release-abi16_0_0', ext: 'aar')
  compile(name: 'ReactAndroid-release-abi15_0_0', ext: 'aar')
  compile(name: 'ReactAndroid-release-abi14_0_0', ext: 'aar')

  // Our dependencies
  compile 'com.android.support:appcompat-v7:25.3.1'

  // Our dependencies from ExpoView
  // DON'T ADD ANYTHING HERE THAT ISN'T IN EXPOVIEW. ONLY COPY THINGS FROM EXPOVIEW TO HERE.
  compile 'com.android.support:appcompat-v7:25.3.1'
  compile ('com.facebook.android:facebook-android-sdk:4.7.0') {
    exclude module: 'bolts-android'
  }
  compile('com.facebook.android:audience-network-sdk:4.22.1') {
    exclude module: 'play-services-ads'
  }
  provided 'org.glassfish:javax.annotation:3.1.1'
  compile 'com.jakewharton:butterknife:7.0.1'
  compile 'de.greenrobot:eventbus:2.4.0'
  compile 'com.amplitude:android-sdk:2.9.2' // Be careful when upgrading! Upgrading might break experience scoping. Check with Jesse. See Analytics.resetAmplitudeDatabaseHelper
  compile 'com.squareup.picasso:picasso:2.5.2'
  compile 'com.google.android.gms:play-services-gcm:9.8.0'
  compile 'com.google.android.gms:play-services-analytics:9.8.0'
  compile 'com.google.android.gms:play-services-maps:9.8.0'
  compile 'com.google.android.gms:play-services-auth:9.8.0'
  compile 'com.google.android.gms:play-services-location:9.8.0'
  compile 'com.google.android.gms:play-services-ads:9.8.0'
  apt 'com.raizlabs.android:DBFlow-Compiler:2.2.1'
  compile \\"com.raizlabs.android:DBFlow-Core:2.2.1\\"
  compile \\"com.raizlabs.android:DBFlow:2.2.1\\"
  compile \\"com.madgag.spongycastle:core:1.53.0.0\\"
  compile \\"com.madgag.spongycastle:prov:1.53.0.0\\"
  debugCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.4-beta1'
  // debugCompile 'com.squareup.leakcanary:leakcanary-android:1.4-beta1'
  releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.4-beta1'
  compile 'com.facebook.device.yearclass:yearclass:1.0.1'
  compile 'commons-io:commons-io:1.3.2'
  compile 'me.leolin:ShortcutBadger:1.1.4@aar'
  compile 'com.nostra13.universalimageloader:universal-image-loader:1.9.5'
  compile 'com.theartofdev.edmodo:android-image-cropper:2.4.+'
  compile 'com.yqritc:android-scalablevideoview:1.0.1'
  compile 'commons-codec:commons-codec:1.10'
  compile 'com.segment.analytics.android:analytics:4.+'
  compile 'com.google.zxing:core:3.3.3'
  compile 'net.openid:appauth:0.4.1'
  compile 'com.airbnb.android:lottie:2.2.0'
  compile 'io.branch.sdk.android:library:2.6.1'
  compile('io.nlopez.smartlocation:library:3.2.11') {
    transitive = false
  }
  compile 'com.android.support:exifinterface:25.3.1'
  compile 'com.squareup.okhttp3:okhttp:3.4.1'
  compile 'com.squareup.okhttp3:okhttp-urlconnection:3.4.1'
  compile 'com.squareup.okhttp3:okhttp-ws:3.4.1'
  compile 'com.squareup.okio:okio:1.9.0'

  // Testing
  androidTestCompile 'com.android.support.test.espresso:espresso-core:2.2.2'
  androidTestCompile 'com.android.support.test:runner:0.5'
  androidTestCompile 'com.android.support:support-annotations:25.3.1'
  androidTestCompile 'com.google.code.findbugs:jsr305:3.0.0'
  androidTestCompile 'com.android.support.test.uiautomator:uiautomator-v18:2.1.1'
  androidTestCompile 'com.azimolabs.conditionwatcher:conditionwatcher:0.2'
  compile project(path: ':expoview')
}

// This has to be down here for some reason
apply plugin: 'com.google.gms.google-services'
"
`;

exports[`shell_app_file_app/fabric.properties 1`] = `
"#Contains API Secret used to validate your application. Commit to internal source control; avoid making secret public.
#Sun Dec 13 13:22:06 PST 2015
apiSecret=83176563693e1eefa1a91359c4151b88c3fd17e52ddf6d64416b7f1e0fa9cede
"
`;

exports[`shell_app_file_app/google-services.json 1`] = `
"{
  \\"project_info\\": {
    \\"project_id\\": \\"exponent-5dd6d\\",
    \\"project_number\\": \\"367315174693\\",
    \\"name\\": \\"Exponent Play Services\\"
  },
  \\"client\\": [
    {
      \\"client_info\\": {
        \\"mobilesdk_app_id\\": \\"1:367315174693:android:f968efbb41d1fa7a\\",
        \\"client_id\\": \\"android:host.exp.exponent\\",
        \\"client_type\\": 1,
        \\"android_client_info\\": {
          \\"package_name\\": \\"host.exp.nclexp\\",
          \\"certificate_hash\\": \\"\\"
        }
      },
      \\"oauth_client\\": [],
      \\"api_key\\": [
        {
          \\"current_key\\": \\"\\"
        }
      ],
      \\"services\\": {
        \\"analytics_service\\": {
          \\"status\\": 2,
          \\"analytics_property\\": {
            \\"tracking_id\\": \\"UA-76673608-1\\"
          }
        },
        \\"cloud_messaging_service\\": {
          \\"status\\": 2,
          \\"apns_config\\": []
        },
        \\"appinvite_service\\": {
          \\"status\\": 1,
          \\"other_platform_oauth_client\\": []
        },
        \\"google_signin_service\\": {
          \\"status\\": 1
        },
        \\"ads_service\\": {
          \\"status\\": 1
        }
      }
    }
  ],
  \\"client_info\\": [],
  \\"ARTIFACT_VERSION\\": \\"1\\"
}
"
`;

exports[`shell_app_file_app/src/main/AndroidManifest.xml 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<manifest
  package=\\"host.exp.exponent\\"
  xmlns:android=\\"http://schemas.android.com/apk/res/android\\"
  xmlns:tools=\\"http://schemas.android.com/tools\\">

  <permission
    android:name=\\"host.exp.nclexp.permission.C2D_MESSAGE\\"
    android:protectionLevel=\\"signature\\"/>

  <!-- These are required permissions to make the app run -->
  <uses-permission android:name=\\"host.exp.nclexp.permission.C2D_MESSAGE\\" />
  <uses-permission android:name=\\"com.google.android.c2dm.permission.RECEIVE\\" />
  <uses-permission android:name=\\"android.permission.ACCESS_NETWORK_STATE\\" />
  <uses-permission android:name=\\"android.permission.INTERNET\\" />
  <uses-permission android:name=\\"android.permission.SYSTEM_ALERT_WINDOW\\" />

  <!-- ADD PERMISSIONS HERE -->
  <!-- BEGIN OPTIONAL PERMISSIONS -->
  <uses-permission android:name=\\"android.permission.MANAGE_DOCUMENTS\\" />
  <uses-permission android:name=\\"android.permission.READ_INTERNAL_STORAGE\\" />
  <uses-permission android:name=\\"android.permission.READ_PHONE_STATE\\" />
  <uses-permission android:name=\\"android.permission.USE_FINGERPRINT\\" />
  <uses-permission android:name=\\"android.permission.VIBRATE\\" />
  <uses-permission android:name=\\"android.permission.WAKE_LOCK\\" />
  <uses-permission android:name=\\"com.android.launcher.permission.INSTALL_SHORTCUT\\" />

  <!-- These require runtime permissions on M -->
  <uses-permission android:name=\\"android.permission.ACCESS_COARSE_LOCATION\\" />
  <uses-permission android:name=\\"android.permission.ACCESS_FINE_LOCATION\\" />
  <uses-permission android:name=\\"android.permission.CAMERA\\" />
  <uses-permission android:name=\\"android.permission.READ_CONTACTS\\" />
  <uses-permission android:name=\\"android.permission.READ_EXTERNAL_STORAGE\\" />
  <uses-permission android:name=\\"android.permission.RECORD_AUDIO\\" />
  <uses-permission android:name=\\"android.permission.WRITE_EXTERNAL_STORAGE\\" />
  <uses-permission android:name=\\"android.permission.WRITE_SETTINGS\\" />
  <!-- END OPTIONAL PERMISSIONS -->

  <uses-feature android:glEsVersion=\\"0x00020000\\" android:required=\\"false\\" />

  <application
    android:name=\\".ExponentApplication\\"
    android:allowBackup=\\"true\\"
    android:icon=\\"@mipmap/ic_launcher\\"
    android:label=\\"@string/app_name\\"
    android:largeHeap=\\"true\\">

    <activity
      android:name=\\".LauncherActivity\\"
      android:exported=\\"true\\"
      android:launchMode=\\"singleTask\\"
      android:screenOrientation=\\"portrait\\"
      android:theme=\\"@android:style/Theme.Translucent.NoTitleBar\\">
      <intent-filter>
        <data android:scheme=\\"expncl\\"/>

        <action android:name=\\"android.intent.action.VIEW\\"/>

        <category android:name=\\"android.intent.category.DEFAULT\\"/>
        <category android:name=\\"android.intent.category.BROWSABLE\\"/>
      </intent-filter>
    </activity>

    <activity
      android:name=\\".experience.ExperienceActivity\\"
      android:configChanges=\\"keyboard|keyboardHidden|orientation|screenSize\\"
      android:theme=\\"@style/Theme.Exponent.Light\\"
      android:windowSoftInputMode=\\"adjustResize\\">
    </activity>

    <activity
      android:name=\\".experience.ShellAppActivity\\"
      android:configChanges=\\"keyboard|keyboardHidden|orientation|screenSize\\"
      android:theme=\\"@style/Theme.Exponent.Splash\\"
      android:windowSoftInputMode=\\"adjustResize\\">
      <intent-filter>
      <action android:name=\\"android.intent.action.MAIN\\"/>

      <category android:name=\\"android.intent.category.LAUNCHER\\"/>
    </intent-filter>
    </activity>

    <activity
      android:name=\\".experience.HomeActivity\\"
      android:label=\\"@string/app_name\\"
      android:launchMode=\\"singleTask\\"
      android:screenOrientation=\\"portrait\\"
      android:theme=\\"@style/Theme.Exponent.Light\\">
    </activity>

    <activity android:name=\\"com.facebook.react.devsupport.DevSettingsActivity\\"/>
    <!-- ADD DEV SETTINGS HERE -->
    <activity android:name=\\"abi22_0_0.com.facebook.react.devsupport.DevSettingsActivity\\"/>
    <activity android:name=\\"abi21_0_0.com.facebook.react.devsupport.DevSettingsActivity\\"/>
    <activity android:name=\\"abi20_0_0.com.facebook.react.devsupport.DevSettingsActivity\\"/>
    <activity android:name=\\"abi19_0_0.com.facebook.react.devsupport.DevSettingsActivity\\"/>
    <activity android:name=\\"abi18_0_0.com.facebook.react.devsupport.DevSettingsActivity\\"/>
    <activity android:name=\\"abi17_0_0.com.facebook.react.devsupport.DevSettingsActivity\\"/>
    <activity android:name=\\"abi16_0_0.com.facebook.react.devsupport.DevSettingsActivity\\"/>
    <activity android:name=\\"abi15_0_0.com.facebook.react.devsupport.DevSettingsActivity\\"/>
    <activity android:name=\\"abi14_0_0.com.facebook.react.devsupport.DevSettingsActivity\\"/>

    <activity
      android:name=\\".ExponentDevActivity\\"
      android:exported=\\"true\\"
      android:label=\\"@string/dev_activity_name\\"
      android:screenOrientation=\\"portrait\\"
      android:theme=\\"@style/Theme.Exponent.Dark\\"
      android:windowSoftInputMode=\\"adjustPan\\">
    </activity>

    <activity
      android:name=\\".oauth.OAuthWebViewActivity\\"
      android:screenOrientation=\\"portrait\\"
      android:theme=\\"@style/Theme.Exponent.Light\\">
    </activity>

    <activity
        android:name=\\"net.openid.appauth.RedirectUriReceiverActivity\\"
        tools:node=\\"replace\\">
      <intent-filter>
        <action android:name=\\"android.intent.action.VIEW\\"/>
        <category android:name=\\"android.intent.category.DEFAULT\\"/>
        <category android:name=\\"android.intent.category.BROWSABLE\\"/>
        <data android:scheme=\\"host.exp.nclexp\\" android:path=\\"oauthredirect\\"/>
      </intent-filter>
    </activity>

    <activity
      android:name=\\".oauth.OAuthResultActivity\\">
    </activity>

    <activity
      android:name=\\".chrometabs.ChromeTabsManagerActivity\\">
    </activity>

    <activity
      android:name=\\".experience.ErrorActivity\\"
      android:theme=\\"@style/Theme.Exponent.Dark\\"
      android:screenOrientation=\\"portrait\\">
    </activity>

    <activity
      android:name=\\".experience.InfoActivity\\"
      android:screenOrientation=\\"portrait\\"
      android:theme=\\"@style/Theme.Exponent.Light\\">
    </activity>

    <activity
      android:name=\\"com.facebook.FacebookActivity\\"
      android:configChanges=\\"keyboard|keyboardHidden|screenLayout|screenSize|orientation\\"
      android:label=\\"@string/app_name\\"
      android:theme=\\"@android:style/Theme.Translucent.NoTitleBar\\"
      tools:replace=\\"android:theme\\" />

    <activity
      android:name=\\"com.facebook.ads.InterstitialAdActivity\\"
      android:configChanges=\\"keyboard|keyboardHidden|screenLayout|screenSize|orientation\\"
      android:label=\\"@string/app_name\\"
      android:theme=\\"@android:style/Theme.Translucent.NoTitleBar\\" />

    <service
      android:name=\\".ExponentIntentService\\"
      android:exported=\\"false\\" />

    <!-- Analytics -->
    <receiver
      android:name=\\"host.exp.exponent.referrer.InstallReferrerReceiver\\"
      android:exported=\\"true\\">
      <intent-filter>
        <action android:name=\\"com.android.vending.INSTALL_REFERRER\\" />
      </intent-filter>
    </receiver>

    <!--
    This crashes: https://code.google.com/p/analytics-issues/issues/detail?id=667
    TODO: turn it back on when it's fixed
    <service
      android:name=\\"com.google.android.gms.analytics.CampaignTrackingService\\"
      android:enabled=\\"true\\"
      android:exported=\\"false\\" />-->

    <receiver android:name=\\"com.google.android.gms.analytics.AnalyticsReceiver\\"
              android:enabled=\\"true\\">
      <intent-filter>
        <action android:name=\\"com.google.android.gms.analytics.ANALYTICS_DISPATCH\\" />
      </intent-filter>
    </receiver>

    <service android:name=\\"com.google.android.gms.analytics.AnalyticsService\\"
             android:enabled=\\"true\\"
             android:exported=\\"false\\"/>

    <!-- GCM -->
    <receiver
      android:name=\\"com.google.android.gms.gcm.GcmReceiver\\"
      android:exported=\\"true\\"
      android:permission=\\"com.google.android.c2dm.permission.SEND\\">
      <intent-filter>
        <action android:name=\\"com.google.android.c2dm.intent.RECEIVE\\"/>
        <action android:name=\\"com.google.android.c2dm.intent.REGISTRATION\\"/>

        <category android:name=\\"host.exp.nclexp\\"/>
      </intent-filter>
    </receiver>

    <service
      android:name=\\".gcm.ExponentGcmListenerService\\"
      android:exported=\\"false\\">
      <intent-filter>
        <action android:name=\\"com.google.android.c2dm.intent.RECEIVE\\"/>
      </intent-filter>
    </service>
    <service
      android:name=\\".gcm.ExponentInstanceIDListenerService\\"
      android:exported=\\"false\\">
      <intent-filter>
        <action android:name=\\"com.google.android.gms.iid.InstanceID\\"/>
      </intent-filter>
    </service>
    <service
      android:name=\\".gcm.RegistrationIntentService\\"
      android:exported=\\"false\\">
    </service>

    <!-- ImagePicker native module -->
    <activity
      android:name=\\"com.theartofdev.edmodo.cropper.CropImageActivity\\"
      android:theme=\\"@style/Base.Theme.AppCompat\\">
    </activity>


    <!-- ADD FABRIC CONFIG HERE -->
    <!-- BEGIN FABRIC CONFIG -->
    <meta-data
      android:name=\\"io.fabric.ApiKey\\"
      android:value=\\"a25fafe9f9edee11a9882b32e0cd7a26df6e2c42\\"/>
    <!-- END FABRIC CONFIG -->

    <!-- ADD GOOGLE MAPS CONFIG HERE -->
    <!-- BEGIN GOOGLE MAPS CONFIG -->
    <meta-data
      android:name=\\"com.google.android.geo.API_KEY\\"
      android:value=\\"AIzaSyCPyKmt6in3JwAsogYikNNjor8qgU9stRQ\\"/>
    <!-- END GOOGLE MAPS CONFIG -->

    <!-- ADD BRANCH CONFIG HERE -->

    <!-- The Facebook SDK runs FacebookInitProvider on startup and crashes if there isn't an ID here -->
    <meta-data android:name=\\"com.facebook.sdk.ApplicationId\\" android:value=\\"fb0\\"/>
  </application>

</manifest>
"
`;

exports[`shell_app_file_app/src/main/assets/shell-app-manifest.json 1`] = `"{\\"android\\":{\\"package\\":\\"host.exp.nclexp\\",\\"versionCode\\":11},\\"androidShowExponentNotificationInShellApp\\":true,\\"description\\":\\"This experience shows a bunch of the native components that you can use in React Native core and Expo. Hit the button in the top right for the components in the Expo SDK.\\",\\"facebookScheme\\":\\"fb1201211719949057\\",\\"icon\\":\\"./assets/icons/icon.png\\",\\"iconUrl\\":\\"https://d1wp6m56sqw74a.cloudfront.net/~assets/eac9cc0fbd5a7deb0bd90a2b2a787a1f\\",\\"ios\\":{\\"bundleIdentifier\\":\\"host.exp.nclexp\\"},\\"name\\":\\"Expo APIs\\",\\"notification\\":{\\"color\\":\\"#000000\\",\\"icon\\":\\"./assets/icons/notificationIcon.png\\",\\"iconUrl\\":\\"https://d1wp6m56sqw74a.cloudfront.net/~assets/871a931eeb47f6b1e3f241ef227e81ac\\"},\\"orientation\\":\\"portrait\\",\\"packagerOpts\\":{\\"assetExts\\":[\\"ttf\\",\\"mp4\\"]},\\"primaryColor\\":\\"#cccccc\\",\\"privacy\\":\\"public\\",\\"scheme\\":\\"expncl\\",\\"sdkVersion\\":\\"22.0.0\\",\\"slug\\":\\"native-component-list\\",\\"splash\\":{\\"image\\":\\"./assets/icons/loadingIcon.png\\",\\"imageUrl\\":\\"https://d1wp6m56sqw74a.cloudfront.net/~assets/ff51c0abd078b947fc370e5c03712f3f\\"},\\"version\\":\\"22.0.0\\",\\"id\\":\\"@community/native-component-list\\",\\"revisionId\\":\\"22.0.0-r.LdVAJzvAG1\\",\\"publishedTime\\":\\"2017-11-04T00:06:41.086Z\\",\\"bundleUrl\\":\\"https://d1wp6m56sqw74a.cloudfront.net/%40community%2Fnative-component-list%2F22.0.0%2F24895df4f22096f3daf08b85380a6137-22.0.0-android.js\\"}"`;

exports[`shell_app_file_app/src/main/res/drawable/splash_background.xml 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<layer-list xmlns:android=\\"http://schemas.android.com/apk/res/android\\">

    <item android:drawable=\\"@color/splashBackground\\"/>

    <item><bitmap android:gravity=\\"center\\" android:src=\\"@drawable/shell_launch_background_image\\" /></item>

</layer-list>"
`;

exports[`shell_app_file_app/src/main/res/values/colors.xml 1`] = `
"<?xml version=\\"1.0\\" encoding=\\"utf-8\\"?>
<resources>
  <color name=\\"colorPrimary\\">#1b73b4</color>
  <color name=\\"colorPrimaryDark\\">#011A2D</color>
  <color name=\\"colorAccentLight\\">#1b73b4</color>
  <color name=\\"colorAccentDark\\">#FFFFFF</color>
  <color name=\\"colorText\\">#FFFFFF</color>
  <color name=\\"white\\">#FFFFFF</color>
  <color name=\\"colorLight\\">#F6F6F7</color>
  <color name=\\"splashBackground\\">#FFFFFF</color>
</resources>
"
`;

exports[`shell_app_file_app/src/main/res/values/strings.xml 1`] = `
"<resources>
  <string name=\\"app_name\\">Expo APIs</string>
  <string name=\\"dev_activity_name\\">Exponent Dev</string>
  <string name=\\"preference_file_key\\">host.exp.exponent.SharedPreferences</string>
  <string name=\\"error_default\\">Something went wrong. Sorry about that.</string>
  <string name=\\"error_unable_to_load_experience\\">Unable to load Experience.</string>
</resources>
"
`;

exports[`shell_app_file_expoview/build.gradle 1`] = `
"apply plugin: 'com.android.library'
apply plugin: 'maven'

//maven repository info
group = 'host.exp.exponent'
version = '22.0.0'

//Upload android library to maven with javadoc and android sources
configurations {
  deployerJars
}

//Creating sources with comments
task androidSourcesJar(type: Jar) {
  classifier = 'sources'
  from android.sourceSets.main.java.srcDirs
}

//Put the androidSources and javadoc to the artifacts
artifacts {
  archives androidSourcesJar
}

uploadArchives {
  repositories {
    mavenDeployer {
      configuration = configurations.deployerJars
      repository(url: mavenLocal().url) {
        //if your repository needs authentication
        // authentication(userName: \\"username\\", password: \\"password\\")
      }
    }
  }
}

buildscript {
  repositories {
    maven { url 'https://maven.fabric.io/public' }
      maven { url \\"https://jitpack.io\\" }
    flatDir {
      dirs 'libs'
    }
  }
}

apply plugin: 'com.neenbedankt.android-apt'

import org.apache.tools.ant.taskdefs.condition.Os

repositories {
  maven { url 'https://maven.fabric.io/public' }
    maven { url \\"https://jitpack.io\\" }
  flatDir {
    dirs 'libs'
  }
}


// Custom task for NDK module

def getNdkBuildName() {
  if (Os.isFamily(Os.FAMILY_WINDOWS)) {
    return \\"ndk-build.cmd\\"
  } else {
    return \\"ndk-build\\"
  }
}

def findNdkBuildFullPath() {
  // we allow to provide full path to ndk-build tool
  if (hasProperty('ndk.command')) {
    return property('ndk.command')
  }
  // or just a path to the containing directory
  if (hasProperty('ndk.path')) {
    def ndkDir = property('ndk.path')
    return new File(ndkDir, getNdkBuildName()).getAbsolutePath()
  }
  if (System.getenv('ANDROID_NDK') != null) {
    def ndkDir = System.getenv('ANDROID_NDK')
    return new File(ndkDir, getNdkBuildName()).getAbsolutePath()
  }
  def ndkDir = android.hasProperty('plugin') ? android.plugin.ndkFolder :
          plugins.getPlugin('com.android.library').hasProperty('sdkHandler') ?
                  plugins.getPlugin('com.android.library').sdkHandler.getNdkFolder() :
                  android.ndkDirectory.absolutePath
  if (ndkDir) {
    return new File(ndkDir, getNdkBuildName()).getAbsolutePath()
  }
  return null
}

def getNdkBuildFullPath() {
  def ndkBuildFullPath = findNdkBuildFullPath()
  if (ndkBuildFullPath == null) {
    throw new GradleScriptException(
            \\"ndk-build binary cannot be found, check if you've set \\" +
                    \\"\\\\$ANDROID_NDK environment variable correctly or if ndk.dir is \\" +
                    \\"setup in local.properties\\",
            null)
  }
  if (!new File(ndkBuildFullPath).canExecute()) {
    throw new GradleScriptException(
            \\"ndk-build binary \\" + ndkBuildFullPath + \\" doesn't exist or isn't executable.\\\\n\\" +
                    \\"Check that the \\\\$ANDROID_NDK environment variable, or ndk.dir in local.proerties, is set correctly.\\\\n\\" +
                    \\"(On Windows, make sure you escape backslashes in local.properties or use forward slashes, e.g. C:\\\\\\\\\\\\\\\\ndk or C:/ndk rather than C:\\\\\\\\ndk)\\",
            null)
  }
  return ndkBuildFullPath
}

task buildExponentNdkLib(dependsOn: ':ReactAndroid:prepareJSC', type: Exec) {
  inputs.file('src/main/jni')
  inputs.file('../../cpp')
  outputs.dir(\\"$buildDir/exponent-ndk/all\\")
  commandLine getNdkBuildFullPath(),
          'NDK_PROJECT_PATH=null',
          \\"NDK_APPLICATION_MK=$projectDir/src/main/jni/Application.mk\\",
          'NDK_OUT=' + temporaryDir,
          \\"NDK_LIBS_OUT=$buildDir/exponent-ndk/all\\",
          '-C', file('src/main/jni').absolutePath,
          '--jobs', Runtime.runtime.availableProcessors()
}

task cleanExponentNdkLib(type: Exec) {
  commandLine getNdkBuildFullPath(),
          '-C', file('src/main/jni').absolutePath,
          'clean'
}

task packageExponentNdkLibs(dependsOn: buildExponentNdkLib, type: Copy) {
  from \\"$buildDir/exponent-ndk/all\\"
  exclude '**/libjsc.so'
  exclude '**/libgnustl_shared.so'
  into \\"$buildDir/exponent-ndk/exported\\"
}


android {
  compileSdkVersion 25
  buildToolsVersion \\"25.0.2\\"

  defaultConfig {
    minSdkVersion 19
    targetSdkVersion 25
    versionCode 1
    versionName \\"1.0\\"
    ndk {
      abiFilters 'armeabi-v7a', 'x86'
    }
  }

  // Use custom task for NDK module from above
  sourceSets.main {
    jni.srcDirs = []
    jniLibs.srcDir \\"$buildDir/exponent-ndk/exported\\"
  }
  tasks.withType(JavaCompile) {
    compileTask -> compileTask.dependsOn packageExponentNdkLibs
  }
  clean.dependsOn cleanExponentNdkLib

  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }
}

task generateDynamicMacros(type: Exec) {
  if (Os.isFamily(Os.FAMILY_WINDOWS)) {
    // This gets run from the 'app' directory
    workingDir '../../tools-public'
    commandLine 'cmd.exe', '/c', 'generate-dynamic-macros-cli.js --buildConstantsPath ./src/main/java/host/exp/exponent/generated/ExponentBuildConstants.java --platform android'
  } else {
    commandLine '../../tools-public/generate-dynamic-macros-cli.js', '--buildConstantsPath', './src/main/java/host/exp/exponent/generated/ExponentBuildConstants.java', '--platform', 'android'
}


dependencies {
  compile fileTree(dir: 'libs', include: ['*.jar'])
  compile 'com.android.support:multidex:1.0.1'

  // Current react native
  compile project(':ReactAndroid')
  /* UNCOMMENT WHEN DISTRIBUTING
  compile 'com.facebook.react:react-native:22.0.0'
  END UNCOMMENT WHEN DISTRIBUTING */

  // React native dependencies
  // We use a different version of appcompat
  compile 'com.android.support:recyclerview-v7:25.+'
  compile 'com.facebook.fbui.textlayoutbuilder:textlayoutbuilder:1.0.0'
  compile 'com.facebook.fresco:fresco:1.0.1'
  compile 'com.facebook.fresco:animated-gif:1.0.1'
  compile 'com.facebook.fresco:animated-webp:1.0.1'
  compile 'com.facebook.fresco:webpsupport:1.0.1'
  compile 'com.facebook.fresco:webpsupport:1.0.1'
  compile 'expolib_v1.com.facebook.fresco:expolib_v1-imagepipeline-okhttp3:1.0.1'
  compile 'com.facebook.stetho:stetho:1.3.1'
  compile 'com.facebook.stetho:stetho-okhttp3:1.3.1'
  compile 'com.facebook.soloader:soloader:0.1.0'
  compile 'com.fasterxml.jackson.core:jackson-core:2.2.3'
  compile 'com.google.code.findbugs:jsr305:3.0.0'
  compile 'expolib_v1.com.squareup.okhttp3:okhttp:3.6.0'
  compile 'expolib_v1.com.squareup.okhttp3:okhttp-urlconnection:3.6.0'
  compile 'expolib_v1.com.squareup.okio:okio:1.13.0'
  compile 'org.webkit:android-jsc:r174650'

  // Our dependencies
  compile 'com.android.support:appcompat-v7:25.3.1'
  compile 'com.android.support:customtabs:25.3.1'
  compile('com.crashlytics.sdk.android:crashlytics:2.5.5@aar') {
    transitive = true;
  }
  compile ('com.facebook.android:facebook-android-sdk:4.+') {
    exclude module: 'bolts-android'
  }
  compile('com.facebook.android:audience-network-sdk:4.+') {
    exclude module: 'play-services-ads'
  }
  provided 'org.glassfish:javax.annotation:3.1.1'
  compile 'de.greenrobot:eventbus:2.4.0'
  compile 'com.amplitude:android-sdk:2.9.2' // Be careful when upgrading! Upgrading might break experience scoping. Check with Jesse. See Analytics.resetAmplitudeDatabaseHelper
  compile 'com.squareup.picasso:picasso:2.5.2'
  compile 'com.google.android.gms:play-services-gcm:9.8.0'
  compile 'com.google.android.gms:play-services-analytics:9.8.0'
  compile 'com.google.android.gms:play-services-maps:9.8.0'
  compile 'com.google.android.gms:play-services-auth:9.8.0'
  compile 'com.google.android.gms:play-services-location:9.8.0'
  compile 'com.google.android.gms:play-services-ads:9.8.0'
  compile 'com.google.android.gms:play-services-fitness:9.8.0'
  compile 'com.google.android.gms:play-services-wallet:9.8.0' //may need 10.+
  compile 'com.stripe:stripe-android:2.1.+'
  compile 'com.github.thefuntasty:CreditCardEntry:1.4.8.4'
  apt 'com.raizlabs.android:DBFlow-Compiler:2.2.1'
  compile \\"com.raizlabs.android:DBFlow-Core:2.2.1\\"
  compile \\"com.raizlabs.android:DBFlow:2.2.1\\"
  compile \\"com.madgag.spongycastle:core:1.53.0.0\\"
  compile \\"com.madgag.spongycastle:prov:1.53.0.0\\"
  debugCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.4-beta1'
  // debugCompile 'com.squareup.leakcanary:leakcanary-android:1.4-beta1'
  releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.4-beta1'
  compile 'com.facebook.device.yearclass:yearclass:1.0.1'
  compile 'commons-io:commons-io:1.3.2'
  compile 'me.leolin:ShortcutBadger:1.1.4@aar'
  compile 'com.nostra13.universalimageloader:universal-image-loader:1.9.5'
  compile 'com.theartofdev.edmodo:android-image-cropper:2.4.+'
  compile 'com.yqritc:android-scalablevideoview:1.0.1'
  compile 'commons-codec:commons-codec:1.10'
  compile 'com.segment.analytics.android:analytics:4.+'
  compile 'com.google.zxing:core:3.3.3'
  compile 'net.openid:appauth:0.4.1'
  compile 'com.airbnb.android:lottie:2.2.0'
  compile 'io.branch.sdk.android:library:2.6.1'
  compile('io.nlopez.smartlocation:library:3.2.11') {
    transitive = false
  }
  compile 'com.android.support:exifinterface:25.3.1'
  compile 'com.google.android:cameraview:1.0.0'
  /*compile('com.gettipsi:stripeview:1.0.0') {
      transitive = false
      exclude group: 'com.facebook.react', module: 'react-native'
  }*/
  // Remember to update DetachAppTemplate build.gradle if you add any excludes or transitive = false here!
}
"
`;

exports[`shell_app_file_expoview/src/main/AndroidManifest.xml 1`] = `
"<manifest xmlns:android=\\"http://schemas.android.com/apk/res/android\\"
    package=\\"host.exp.expoview\\">

    <supports-screens
        android:anyDensity=\\"true\\"
        android:largeScreens=\\"true\\"
        android:normalScreens=\\"true\\"
        android:smallScreens=\\"true\\"
        android:xlargeScreens=\\"true\\" >
    </supports-screens>

    <uses-permission android:name=\\"android.permission.INTERNET\\"/>
    <uses-permission android:name=\\"com.android.launcher.permission.INSTALL_SHORTCUT\\"/>
    <uses-permission android:name=\\"android.permission.SYSTEM_ALERT_WINDOW\\"/>
    <uses-permission android:name=\\"android.permission.WAKE_LOCK\\"/>
    <uses-permission android:name=\\"host.exp.nclexp.permission.C2D_MESSAGE\\"/>
    <uses-permission android:name=\\"android.permission.READ_INTERNAL_STORAGE\\"/>
    <uses-permission android:name=\\"android.permission.ACCESS_NETWORK_STATE\\" />
    <uses-permission android:name=\\"android.permission.MANAGE_DOCUMENTS\\" />
    <uses-permission android:name=\\"android.permission.USE_FINGERPRINT\\" />

    <!-- These require runtime permissions on M -->
    <uses-permission android:name=\\"android.permission.READ_CONTACTS\\"/>
    <uses-permission android:name=\\"android.permission.READ_EXTERNAL_STORAGE\\"/>
    <uses-permission android:name=\\"android.permission.WRITE_EXTERNAL_STORAGE\\"/>
    <uses-permission android:name=\\"android.permission.CAMERA\\"/>
    <uses-permission android:name=\\"android.permission.ACCESS_COARSE_LOCATION\\" />
    <uses-permission android:name=\\"android.permission.ACCESS_FINE_LOCATION\\" />

    <uses-feature android:name=\\"android.hardware.camera\\" android:required=\\"false\\"/>
    <uses-feature android:name=\\"android.hardware.camera.autofocus\\" android:required=\\"false\\"/>
    <uses-feature android:name=\\"android.hardware.location\\" android:required=\\"false\\"/>
    <uses-feature android:name=\\"android.hardware.location.gps\\" android:required=\\"false\\"/>
    <uses-feature android:name=\\"android.hardware.location.network\\" android:required=\\"false\\"/>
    <uses-feature android:name=\\"android.hardware.wifi\\" android:required=\\"false\\"/>
    <uses-feature android:name=\\"android.hardware.microphone\\" android:required=\\"false\\"/>
    <uses-feature android:name=\\"android.hardware.telephony\\" android:required=\\"false\\"/>
    <uses-feature android:name=\\"android.hardware.bluetooth\\" android:required=\\"false\\"/>

    <application>

      <!-- Scheduled notifications -->
      <receiver
        android:name=\\"host.exp.exponent.notifications.ScheduledNotificationReceiver\\"
        android:exported=\\"false\\" />

      <provider
        android:name=\\"android.support.v4.content.FileProvider\\"
        android:authorities=\\"\${applicationId}.provider\\"
        android:exported=\\"false\\"
        android:grantUriPermissions=\\"true\\">
        <meta-data
          android:name=\\"android.support.FILE_PROVIDER_PATHS\\"
          android:resource=\\"@xml/provider_paths\\"/>
      </provider>
    </application>

</manifest>
"
`;

exports[`shell_app_file_expoview/src/main/java/host/exp/exponent/Constants.java 1`] = `
"// Copyright 2015-present 650 Industries. All rights reserved.

package host.exp.exponent;

import android.content.Context;
import android.content.pm.PackageInfo;
import android.content.pm.PackageManager;
import android.net.Uri;
import android.text.TextUtils;

import java.util.ArrayList;
import java.util.List;

import host.exp.exponent.analytics.EXL;

public class Constants {

  private static final String TAG = Constants.class.getSimpleName();

  public static final String VERSION_NAME = \\"2.0.0\\";
  public static String INITIAL_URL = \\"exp://exp.host/@community/native-component-list\\";
  public static final String SHELL_APP_SCHEME = \\"expncl\\";
  public static final String API_HOST = \\"https://exp.host\\";
  public static String ABI_VERSIONS;
  public static String SDK_VERSIONS;
  public static List<String> SDK_VERSIONS_LIST;
  public static final String TEMPORARY_ABI_VERSION = null;
  public static final String EMBEDDED_KERNEL_PATH = \\"assets://kernel.android.bundle\\";
  public static final List<EmbeddedResponse> EMBEDDED_RESPONSES;
  public static boolean DISABLE_NUX = false;
  public static final String RELEASE_CHANNEL = \\"default\\";
  public static boolean SHOW_LOADING_VIEW_IN_SHELL_APP = false;

  public static void setSdkVersions(List<String> sdkVersions) {
    ABI_VERSIONS = TextUtils.join(\\",\\", sdkVersions);

    // NOTE: Currently public-facing SDK versions and internal ABI versions are the same, but
    // eventually we may decouple them
    SDK_VERSIONS = ABI_VERSIONS;
    SDK_VERSIONS_LIST = sdkVersions;
  }

  static {
    List<String> abiVersions = new ArrayList<>();
    // THIS COMMENT IS USED BY android-build-aar.sh DO NOT MODIFY
    abiVersions.add(\\"22.0.0\\");
    abiVersions.add(\\"21.0.0\\");
    abiVersions.add(\\"20.0.0\\");
    abiVersions.add(\\"19.0.0\\");
    abiVersions.add(\\"18.0.0\\");
    abiVersions.add(\\"17.0.0\\");
    abiVersions.add(\\"16.0.0\\");
    abiVersions.add(\\"15.0.0\\");
    abiVersions.add(\\"14.0.0\\");

    if (TEMPORARY_ABI_VERSION != null) {
      abiVersions.add(TEMPORARY_ABI_VERSION);
    }

    setSdkVersions(abiVersions);

    List<EmbeddedResponse> embeddedResponses = new ArrayList<>();
    embeddedResponses.add(new EmbeddedResponse(\\"https://exp.host/@exponent/home/bundle\\", EMBEDDED_KERNEL_PATH, \\"application/javascript\\"));
    // ADD EMBEDDED RESPONSES HERE
    
    // START EMBEDDED RESPONSES
    embeddedResponses.add(new EmbeddedResponse(\\"https://exp.host/@community/native-component-list/index.exp\\", \\"assets://shell-app-manifest.json\\", \\"application/json\\"));
    embeddedResponses.add(new EmbeddedResponse(\\"https://d1wp6m56sqw74a.cloudfront.net/%40community%2Fnative-component-list%2F22.0.0%2F24895df4f22096f3daf08b85380a6137-22.0.0-android.js\\", \\"assets://shell-app.bundle\\", \\"application/javascript\\"));
    // END EMBEDDED RESPONSES
    EMBEDDED_RESPONSES = embeddedResponses;
  }

  public static final boolean DEBUG_COLD_START_METHOD_TRACING = false;
  public static final boolean DEBUG_MANIFEST_METHOD_TRACING = false;
  public static final boolean DEBUG_METHOD_TRACING = DEBUG_COLD_START_METHOD_TRACING || DEBUG_MANIFEST_METHOD_TRACING;
  public static final boolean ENABLE_LEAK_CANARY = false;
  public static final boolean WRITE_BUNDLE_TO_LOG = false;
  public static final boolean WAIT_FOR_DEBUGGER = false;

  public static boolean isShellApp() {
    return INITIAL_URL != null;
  }

  public static class EmbeddedResponse {
    public final String url;
    public final String responseFilePath;
    public final String mediaType;

    public EmbeddedResponse(final String url, final String responseFilePath, final String mediaType) {
      this.url = url;
      this.responseFilePath = responseFilePath;
      this.mediaType = mediaType;
    }
  }

  public static String getVersionName(Context context) {
    if (VERSION_NAME != null) {
      // This will be set in shell apps
      return VERSION_NAME;
    } else {
      try {
        PackageInfo pInfo = context.getPackageManager().getPackageInfo(context.getPackageName(), 0);
        return pInfo.versionName;
      } catch (PackageManager.NameNotFoundException e) {
        EXL.e(TAG, e.toString());
        return \\"\\";
      }
    }
  }

  private static boolean sIsDetached = true;
  public static void setIsDetached(boolean isDetached) {
    sIsDetached = isDetached;
  }

  public static boolean isDetached() {
    return sIsDetached;
  }
}
"
`;
